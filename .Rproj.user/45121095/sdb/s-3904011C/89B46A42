{
    "collab_server" : "",
    "contents" : "#' A graphical user interface for the package GFD\n#' \n#' This function provides a graphical user interface for calculating statistical\n#' tests in general factorial designs.\n#' \n#' The function produces a GUI for the calculation of the test statistics and \n#' for plotting. Data can be loaded via the \"load data\" button. The formula, \n#' number of permutations (default: 10,000) and the significance level alpha\n#' (default: 0.05) need to be specified. If the plot option is chosen, an\n#' additional window opens containing information on the plots.\n#' \n#' @aliases GUI\n#'  \n#' @export\n\ncalculateGUI <- function(){\n  \n  #require(\"RGtk2\", quietly = TRUE)\n  requireNamespace(\"RGtk2\", quietly = TRUE)\n  if(!(\"package:RGtk2\" %in% search())){attachNamespace(\"RGtk2\")}\n  ## Run on \"Load\"\n  getDirectory <- function(button, user.data){\n    directory <- file.choose()\n    RGtk2::gtkEntrySetText(filename, directory)\n  }\n  ## Run on \"OK\"\n  performStatistics <- function(button, user.data) {\n    res <- NULL\n    d <- NULL\n    error <- NULL\n    # Get the information about data and the file\n    the.file <- filename$getText()\n    the.formula <- formula(filename1$getText())\n    the.perm <- as.numeric(filename2$getText())\n    the.alpha <- as.numeric(filename3$getText())\n    the.plot <- toPlot$active\n    the.sep <- sepEntry$getText()\n    the.headers <- headersEntry$active\n    the.dec <- decEntry$getText()\n    d <- read.table(the.file, sep = the.sep, header = the.headers,\n                    dec = the.dec)\n    res <- GFD(the.formula, d, nperm = the.perm, alpha = the.alpha)\n    test <- res$plotting\n    factornumber <- test$nf\n    summary(res)\n##########################################################################################################\n    if (the.plot == TRUE && factornumber != 1) {\n      calculateGUIplot <- function() {\n        requireNamespace(\"RGtk2\", quietly = TRUE)\n        plots <- function(button, user.data) {\n          error <- NULL\n          error1 <- NULL\n          Faktor <- filename$getText()\n          Title <- filename2$getText()\n          line_width <- as.numeric(filename3$getText())\n          the.legendpos <- filename4$getText()\n              \n          plotting(res$plotting, res$Descriptive, Faktor, main = Title, lwd = line_width, \n                   col = 1:length(res$Descriptive[, 1]), pch = 1, legendpos = the.legendpos,\n                   ylab = \"Means\", xlab = \"\")\n                     \n            \n            if (!is.null(error1)) {\n              hbox <- RGtk2::gtkHBoxNew()\n              vbox$packStart(hbox, FALSE, FALSE, 0)\n              label <- RGtk2::gtkLabel(error1)\n              hbox$packStart(label, FALSE, FALSE, 0)\n            }\n            if (!is.null(error)) {\n              hbox <- RGtk2::gtkHBoxNew()\n              vbox$packStart(hbox, FALSE, FALSE, 0)\n              label <- RGtk2::gtkLabel(error)\n              hbox$packStart(label, FALSE, FALSE, 0)\n            }\n          }\n          # Create window\n          window <- RGtk2::gtkWindow()\n          # Add title\n          window[\"title\"] <- \"Plot\"\n          # Add a frame\n          frame <- RGtk2::gtkFrameNew(\"Please choose the factor you wish to plot (for interaction type something like group1:group2).\")\n          window$add(frame)\n          # Create vertical container for file name entry\n          vbox <- RGtk2::gtkVBoxNew(FALSE, 8)\n          vbox$setBorderWidth(24)\n          frame$add(vbox)\n          # Add horizontal container for every widget line\n          hbox <- RGtk2::gtkHBoxNew(FALSE, 8)\n          vbox$packStart(hbox, FALSE, FALSE, 0)\n          # Add label in first column\n          label <- RGtk2::gtkLabelNewWithMnemonic(\"_Factor\")\n          hbox$packStart(label, FALSE, FALSE, 0)\n          # Add entry in the second column; named \"filename\"\n          filename <- RGtk2::gtkEntryNew()\n          filename$setWidthChars(50)\n          label$setMnemonicWidget(filename)\n          hbox$packStart(filename, FALSE, FALSE, 0)\n          # Add an horizontal container to specify parameters\n          hbox <- RGtk2::gtkHBoxNew(FALSE, 8)\n          vbox$packStart(hbox, FALSE, FALSE, 0)\n          label2 <- RGtk2::gtkLabelNewWithMnemonic(\"_Title\")\n          hbox$packStart(label2, FALSE, FALSE, 0)\n          # Add entry in the second column; named \"filename2\"\n          filename2 <- RGtk2::gtkEntryNew()\n          filename2$setWidthChars(10)\n          label2$setMnemonicWidget(filename2)\n          hbox$packStart(filename2, FALSE, FALSE, 0)\n          label3 <- RGtk2::gtkLabelNewWithMnemonic(\"_lwd\")\n          hbox$packStart(label3, FALSE, FALSE, 0)\n          # Add entry in the second column; named \"filename3\"\n          filename3 <- RGtk2::gtkEntryNew()\n          filename3$setWidthChars(10)\n          filename3$setText(2)\n          label3$setMnemonicWidget(filename3)\n          hbox$packStart(filename3, FALSE, FALSE, 0)\n      label4 <- RGtk2::gtkLabelNewWithMnemonic(\"_position of legend\")\n      hbox$packStart(label4, FALSE, FALSE, 0)\n      # Add entry in the second column; named \"filename4\"\n      filename4 <- RGtk2::gtkEntryNew()\n      filename4$setWidthChars(20)\n      filename4$setText(\"topright\")\n      label4$setMnemonicWidget(filename4)\n      hbox$packStart(filename4, FALSE, FALSE, 0)\n          # Add button\n          the.buttons <- RGtk2::gtkHButtonBoxNew()\n          the.buttons$setBorderWidth(5)\n          vbox$add(the.buttons)\n          the.buttons$setLayout(\"spread\")\n          the.buttons$setSpacing(40)\n          buttonOK <- RGtk2::gtkButtonNewFromStock(\"gtk-ok\")\n          RGtk2::gSignalConnect(buttonOK, \"clicked\", plots)\n          the.buttons$packStart(buttonOK, fill=F)\n          buttonCancel <- RGtk2::gtkButtonNewFromStock(\"gtk-close\")\n          RGtk2::gSignalConnect(buttonCancel, \"clicked\", window$destroy)\n          the.buttons$packStart(buttonCancel, fill=F)\n        }\n        calculateGUIplot()\n      } else if (the.plot == TRUE && factornumber == 1){\n        #### one-way\n          GUIplotOneWay <- function() {\n            plot.oneway <- function(button, user.data) {\n              error <- NULL\n              Title <- filename2$getText()\n              line_width <- as.numeric(filename3$getText())\n              Faktor <- test$fac_names\n              if (!is.null(error)) {\n                hbox <- RGtk2::gtkHBoxNew()\n                vbox$packStart(hbox, FALSE, FALSE, 0)\n                label <- RGtk2::gtkLabel(error)\n                hbox$packStart(label, FALSE, FALSE, 0)\n              }\n              plotting(res$plotting, res$Descriptive, Faktor, main = Title, lwd = line_width, \n                       col = 1, pch = 1, ylab = \"Means\", xlab = Faktor)\n            }\n            # Create window\n            window <- RGtk2::gtkWindow()\n            # Add title\n            window[\"title\"] <- \"Plot\"\n            # Add a frame\n            frame <- RGtk2::gtkFrameNew(\"Please choose the parameters for your plot.\")\n            window$add(frame)\n            # Create vertical container for file name entry\n            vbox <- RGtk2::gtkVBoxNew(FALSE, 8)\n            vbox$setBorderWidth(24)\n            frame$add(vbox)\n            # Add horizontal container for every widget line\n            hbox <- RGtk2::gtkHBoxNew(FALSE, 8)\n            vbox$packStart(hbox, FALSE, FALSE, 0)\n            # Add an horizontal container to specify parameters\n            hbox <- RGtk2::gtkHBoxNew(FALSE, 8)\n            vbox$packStart(hbox, FALSE, FALSE, 0)\n            label2 <- RGtk2::gtkLabelNewWithMnemonic(\"_Title\")\n            hbox$packStart(label2, FALSE, FALSE, 0)\n            # Add entry in the second column; named \"filename2\"\n            filename2 <- RGtk2::gtkEntryNew()\n            filename2$setWidthChars(10)\n            label2$setMnemonicWidget(filename2)\n            hbox$packStart(filename2, FALSE, FALSE, 0)\n            label3 <- RGtk2::gtkLabelNewWithMnemonic(\"_lwd\")\n            hbox$packStart(label3, FALSE, FALSE, 0)\n            # Add entry in the second column; named \"filename3\"\n            filename3 <- RGtk2::gtkEntryNew()\n            filename3$setWidthChars(10)\n            filename3$setText(2)\n            label3$setMnemonicWidget(filename3)\n            hbox$packStart(filename3, FALSE, FALSE, 0)\n            # Add button\n            the.buttons <- RGtk2::gtkHButtonBoxNew()\n            the.buttons$setBorderWidth(5)\n            vbox$add(the.buttons)\n            the.buttons$setLayout(\"spread\")\n            the.buttons$setSpacing(40)\n            buttonOK <- RGtk2::gtkButtonNewFromStock(\"gtk-ok\")\n            RGtk2::gSignalConnect(buttonOK, \"clicked\", plot.oneway)\n            the.buttons$packStart(buttonOK,fill=F)\n            buttonCancel <- RGtk2::gtkButtonNewFromStock(\"gtk-close\")\n            RGtk2::gSignalConnect(buttonCancel, \"clicked\", window$destroy)\n            the.buttons$packStart(buttonCancel, fill=F)\n          }\n          GUIplotOneWay()\n        }\n      \n    \n  }\n  # Create window\n  window <- RGtk2::gtkWindow()\n  # Add title\n  window[\"title\"] <- \"Tests for general factorial designs\"\n  # Add a frame\n  frame <- RGtk2::gtkFrameNew(\"Specify data location and formula...\")\n  window$add(frame)\n  # Create vertical container for file name entry\n  vbox <- RGtk2::gtkVBoxNew(FALSE, 8)\n  vbox$setBorderWidth(24)\n  frame$add(vbox)\n  # Add horizontal container for every widget line\n  hbox <- RGtk2::gtkHBoxNew(FALSE, 8)\n  vbox$packStart(hbox, FALSE, FALSE, 0)\n  # Add label in first column\n  label <- RGtk2::gtkLabelNewWithMnemonic(\"_File name\")\n  hbox$packStart(label, FALSE, FALSE, 0)\n  # Add entry in the second column; named \"filename\"\n  filename <- RGtk2::gtkEntryNew()\n  filename$setWidthChars(50)\n  label$setMnemonicWidget(filename)\n  hbox$packStart(filename, FALSE, FALSE, 0)\n  # Add label in first column\n  label1 <- RGtk2::gtkLabelNewWithMnemonic(\"_Formula\")\n  hbox$packStart(label1, FALSE, FALSE, 0)\n  # Add entry in the second column; named \"filename1\"\n  filename1 <- RGtk2::gtkEntryNew()\n  filename1$setWidthChars(50)\n  label1$setMnemonicWidget(filename1)\n  hbox$packStart(filename1, FALSE, FALSE, 0)\n  # Add an horizontal container to specify parameters\n  hbox <- RGtk2::gtkHBoxNew(FALSE, 8)\n  vbox$packStart(hbox, FALSE, FALSE, 0)\n  label2 <- RGtk2::gtkLabelNewWithMnemonic(\"_nperm\")\n  hbox$packStart(label2, FALSE, FALSE, 0)\n  # Add entry in the second column; named \"filename2\"\n  filename2 <- RGtk2::gtkEntryNew()\n  filename2$setWidthChars(10)\n  filename2$setText(10000)\n  label2$setMnemonicWidget(filename2)\n  hbox$packStart(filename2, FALSE, FALSE, 0)\n  label3 <- RGtk2::gtkLabelNewWithMnemonic(\"_alpha\")\n  hbox$packStart(label3, FALSE, FALSE, 0)\n  # Add entry in the second column; named \"filename3\"\n  filename3 <- RGtk2::gtkEntryNew()\n  filename3$setWidthChars(10)\n  filename3$setText(0.05)\n  label3$setMnemonicWidget(filename3)\n  hbox$packStart(filename3, FALSE, FALSE, 0)\n  # Add an horizontal container to specify input file options\n  # are headers included in the file?\n  hbox <- RGtk2::gtkHBoxNew(FALSE, 8)\n  vbox$packStart(hbox, FALSE, FALSE, 0)\n  label <- RGtk2::gtkLabelNewWithMnemonic(\"_Headers?\")\n  hbox$packStart(label, FALSE, FALSE, 0)\n  headersEntry <- RGtk2::gtkCheckButton()\n  headersEntry$active <- TRUE\n  hbox$packStart(headersEntry, FALSE, FALSE, 0)\n  label$setMnemonicWidget(headersEntry)\n  # what separator is used?\n  label <- RGtk2::gtkLabelNewWithMnemonic(\"Col. _Separator?\")\n  hbox$packStart(label, FALSE, FALSE, 0)\n  sepEntry <- RGtk2::gtkEntryNew()\n  sepEntry$setWidthChars(1)\n  sepEntry$setText(\"\")\n  hbox$packStart(sepEntry, FALSE, FALSE, 0)\n  label$setMnemonicWidget(sepEntry)\n  # what's the character used for decimal points?\n  label <- RGtk2::gtkLabelNewWithMnemonic(\"_Dec. character?\")\n  hbox$packStart(label, FALSE, FALSE, 0)\n  decEntry <- RGtk2::gtkEntryNew()\n  decEntry$setWidthChars(1)\n  decEntry$setText(\".\")\n  hbox$packStart(decEntry, FALSE, FALSE, 0)\n  label$setMnemonicWidget(decEntry)\n  # Add separator\n  vbox$packStart(RGtk2::gtkHSeparatorNew(), FALSE, FALSE, 0)\n  # Add plot-option\n  hbox <- RGtk2::gtkHBoxNew(FALSE, 8)\n  vbox$packStart(hbox, FALSE, FALSE, 0)\n  label <- RGtk2::gtkLabelNewWithMnemonic(\"Plot _Results?\")\n  hbox$packStart(label, FALSE, FALSE, 0)\n  toPlot <- RGtk2::gtkCheckButton()\n  hbox$packStart(toPlot, FALSE, FALSE, 0)\n  # Add button\n  the.buttons <- RGtk2::gtkHButtonBoxNew()\n  the.buttons$setBorderWidth(5)\n  vbox$add(the.buttons)\n  the.buttons$setLayout(\"spread\")\n  the.buttons$setSpacing(40)\n  buttonOK <- RGtk2::gtkButtonNewFromStock(\"gtk-ok\")\n  buttonLoad <- RGtk2::gtkButtonNewFromStock(\"load data\")\n  RGtk2::gSignalConnect(buttonOK, \"clicked\", performStatistics)\n  RGtk2::gSignalConnect(buttonLoad, \"clicked\", getDirectory)\n  the.buttons$packStart(buttonOK, fill=F)\n  the.buttons$packStart(buttonLoad, fill=F)\n  buttonCancel <- RGtk2::gtkButtonNewFromStock(\"gtk-close\")\n  RGtk2::gSignalConnect(buttonCancel, \"clicked\", window$destroy)\n  the.buttons$packStart(buttonCancel, fill=F)\n\n\n}\n\n",
    "created" : 1513669797495.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4238404070",
    "id" : "89B46A42",
    "lastKnownWriteTime" : 1513753526,
    "last_content_update" : 1513753526131,
    "path" : "~/Documents/Studium/02 Uni Ulm/02 Promotion/R-packages/GFD/R/GUI.R",
    "project_path" : "R/GUI.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}